# -*- coding: utf-8 -*-
'''
模块名称：数据类型和变量
文件描述: 介绍Python中数据类型和变量的概念及使用方法
文件作者：林风  
创建日期：2025-04-10
'''

# python 中能够直接处理的数据类型有以下几种：

# 1. 数值型：整数、浮点数、复数

# 2. 字符串型：单引号和双引号括起来的文本
    # 转义字符\ 的使用
   
# 3. 布尔型：True、False
    # 布尔值可以用and、or、not运算符进行逻辑运算
    # None 代表空值，算成False，0、空字符串、空列表、空元组、空字典、空集合等都算成False
    
# 4. 列表型：[] 包含多个值，用逗号分隔

# 5. 元组型：() 包含多个值，用逗号分隔，不可修改

# 6. 字典型：{} 包含键值对，用冒号分隔，键不可重复

# 7. 集合型：{} 包含多个值，用逗号分隔，无序且元素不可重复

# 变量的定义
# 变量名只能包含字母、数字和下划线，且不能以数字开头
# 变量名的命名规范：见名思意，见字如面
# 变量被赋值后，类型不可改变
# 变量赋值过程，首先右侧数据先计算出值（即确定），然后在内存中创建数据副本，左侧变量指向右侧数据的内存地址。

# 常量 通常用全部大写的变量名表示常量
# PI = 3.141592653589793


# 练习题：
# 1. 定义一个变量，值为 100
# 2. 定义一个变量，值为 3.141592653589793
# 3. 定义一个变量，值为 "hello, world!"
# 4. 定义一个变量，值为 True
# 5. 定义一个变量，值为 None
# 6. 定义一个变量，值为 [1, 2, 3, 4, 5]
# 7. 定义一个变量，值为 (1, 2, 3, 4, 5)
# 8. 定义一个变量，值为 {"name": "Alice", "age": 20}
# 9. 定义一个变量，值为 {1, 2, 3, 4, 5}
# 10. 定义一个常量，值为 PI

# 分别打印以上变量的值
# 相互比较变量的类型和值
# 尝试修改变量的值，观察是否会报错
# 尝试将变量的值赋给另一个变量，观察是否会报错
# 重复赋值，打印变量的值和内存地址

# 定义各种基本数据类型的变量
int1 = 100  # 整型变量
float1 = 3.141592653589793  # 浮点型变量
tring1 = "hello, world!"  # 字符串变量
bool1 = True  # 布尔型变量
none1 = None  # None值
list1 = [1, 2, 3, 4, 5]  # 列表
tuple1 = (1, 2, 3, 4, 5)  # 元组
dict1 = {'name': 'alice', 'age': 20, 'gender': 'female'}  # 字典
set1 = {9, 3, 2, 5, 1, 3, 2}  # 集合
PI = 3.141592653589793  # 常量(约定用大写表示)

# 打印各个变量的值
print(int1)
print(float1)
print(tring1)
print(bool1)
print(none1)
print(list1)
print(tuple1)
print(dict1)
print(set1)
print(PI)

# 打印元组的id和类型
print(id(tuple1))  # 内存地址
print(type(tuple1))  # 类型

# 重新赋值布尔变量
bool1 = 0  # Python中0等价于False
print(bool1)

# 将指向元组的变量重新赋值为列表
tuple1 = [1, 2, 3, 4, 5]  # 变量可以重新赋值为不同类型
print(tuple1)
print(id(tuple1), type(tuple1))  # 打印新值的内存地址和类型


